name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3.1.0

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    # Spring Boot 어플리케이션 Build
    - name: Build with Gradle Wrapper
      run: ./gradlew build

    # Docker 이미지 Build
    - name: docker image build
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/spring-cicd-test .

    # DockerHub Login (push 하기 위해)
    - name: docker login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    # Docker Hub로 push
    - name: Docker Hub push
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/spring-cicd-test

  # 위 과정에서 푸시한 이미지를 EC2에서 pull 받아서 실행
  run-docker-image-on-ec2:
    needs: build-docker-image
    runs-on: self-hosted

    steps:
    - name: docker pull
      run: docker pull ${{ secrets.DOCKERHUB_USERNAME }}/spring-cicd-test

    - name: docker stop and remove container
      run: |
        if [ $(docker ps -q -f name=spring-cicd-test) ]; then
          docker stop spring-cicd-test
          docker rm spring-cicd-test
        fi

    - name: docker run new container
      run: docker run -d -p 80:8080 --name spring-cicd-test ${{ secrets.DOCKERHUB_USERNAME }}/spring-cicd-test

    - name: 컨테이너 상태 확인
      run: docker ps -a

    - name: 컨테이너 로그 확인
      run: docker logs spring-cicd-test || true

    # 필요에 따라 오래된 이미지 삭제
    #- name: delete unused docker images
    #  run: docker image prune -f
